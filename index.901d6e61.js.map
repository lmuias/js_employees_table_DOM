{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar navBar = document.querySelector(\"thead tr\");\nvar tableBody = document.querySelector(\"tbody\");\nvar form = document.createElement(\"form\");\nvar dataAttributes = [\n    \"name\",\n    \"position\",\n    \"office\",\n    \"age\",\n    \"salary\"\n];\nvar button = document.createElement(\"button\");\nvar page = document.querySelector(\"body\");\nbutton.type = \"submit\";\nbutton.textContent = \"Save to table\";\nfunction capitalizeFirstLetter(str) {\n    if (str.length === 0) return str;\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nform.classList.add(\"new-employee-form\");\nvar sortWay = true;\nvar handleToNumbers = function(str) {\n    return +str.replace(/[^0-9.-]+/g, \"\");\n};\nfunction sortTable(value, columnIndex) {\n    var rowsArray = Array.from(tableBody.querySelectorAll(\"tr\"));\n    rowsArray.sort(function(a, b) {\n        var cellA = a.cells[columnIndex].innerText.toLowerCase();\n        var cellB = b.cells[columnIndex].innerText.toLowerCase();\n        if (sortWay) switch(value){\n            case \"name\":\n            case \"position\":\n            case \"office\":\n                return cellA.localeCompare(cellB);\n            case \"age\":\n                return parseInt(cellA) - parseInt(cellB);\n            case \"salary\":\n                return handleToNumbers(cellA) - handleToNumbers(cellB);\n            default:\n                return null;\n        }\n        else switch(value){\n            case \"name\":\n            case \"position\":\n            case \"office\":\n                return cellB.localeCompare(cellA);\n            case \"age\":\n                return parseInt(cellB) - parseInt(cellA);\n            case \"salary\":\n                return handleToNumbers(cellB) - handleToNumbers(cellA);\n            default:\n                return null;\n        }\n    });\n    rowsArray.forEach(function(row) {\n        return tableBody.appendChild(row);\n    });\n    sortWay = !sortWay;\n}\nnavBar.addEventListener(\"click\", function(action) {\n    var activeFilter = action.target.closest(\"th\");\n    if (activeFilter) {\n        var value = activeFilter.textContent.toLowerCase().trim();\n        var columnIndex = action.target.cellIndex;\n        sortTable(value, columnIndex);\n    }\n});\ntableBody.addEventListener(\"click\", function(action) {\n    var clickedRow = action.target.closest(\"tr\");\n    if (clickedRow) {\n        tableBody.querySelectorAll(\"tr\").forEach(function(row) {\n            row.classList.remove(\"active\");\n        });\n        clickedRow.classList.add(\"active\");\n    }\n});\nvar handleAddInputs = function() {\n    dataAttributes.forEach(function(attribute) {\n        var label = document.createElement(\"label\");\n        var input = document.createElement(\"input\");\n        switch(attribute){\n            case \"name\":\n            case \"position\":\n                input.type = \"text\";\n                input.name = attribute;\n                input.dataset.qa = attribute;\n                label.htmlFor = input.id;\n                label.textContent = capitalizeFirstLetter(attribute);\n                form.appendChild(label);\n                label.appendChild(input);\n                break;\n            case \"office\":\n                var select = document.createElement(\"select\");\n                var cities = [\n                    \"Tokyo\",\n                    \"Singapore\",\n                    \"London\",\n                    \"New York\",\n                    \"Edinburgh\",\n                    \"San Francisco\"\n                ];\n                select.name = attribute;\n                select.required = true;\n                select.dataset.qa = attribute;\n                cities.forEach(function(city) {\n                    var option = document.createElement(\"option\");\n                    option.value = city;\n                    option.textContent = city;\n                    select.appendChild(option);\n                });\n                label.textContent = capitalizeFirstLetter(attribute);\n                form.appendChild(label);\n                label.appendChild(select);\n                break;\n            case \"age\":\n                input.type = \"number\";\n                input.name = attribute;\n                input.dataset.qa = attribute;\n                label.htmlFor = input.id;\n                label.textContent = capitalizeFirstLetter(attribute);\n                form.appendChild(label);\n                label.appendChild(input);\n                break;\n            case \"salary\":\n                input.type = \"number\";\n                input.name = attribute;\n                input.dataset.qa = attribute;\n                label.htmlFor = input.id;\n                label.textContent = capitalizeFirstLetter(attribute);\n                form.appendChild(label);\n                label.appendChild(input);\n                break;\n        }\n    });\n};\nfunction showNotification(text, type) {\n    var notification = document.createElement(\"div\");\n    var notificationMessage = document.createElement(\"span\");\n    notificationMessage.setAttribute(\"class\", \"title\");\n    notification.setAttribute(\"class\", \"notification\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.style.display = \"flex\";\n    notification.style.justifyContent = \"center\";\n    notification.style.alignItems = \"center\";\n    notification.style.textAlign = \"center\";\n    notificationMessage.textContent = text;\n    if (type === \"error\") notification.classList.add(\"error\");\n    else notification.classList.add(\"success\");\n    notification.append(notificationMessage);\n    page.append(notification);\n    setTimeout(function() {\n        return notification.remove();\n    }, 5000);\n}\nvar handleAddEmployee = function(action) {\n    action.preventDefault();\n    var nameInput = form.querySelector('input[name=\"name\"]');\n    var positionInput = form.querySelector('input[name=\"position\"]');\n    var officeSelect = form.querySelector('select[name=\"office\"]');\n    var ageInput = form.querySelector('input[name=\"age\"]');\n    var salaryInput = form.querySelector('input[name=\"salary\"]');\n    var warning = [];\n    if (nameInput.value.trim().length < 4) warning.push(\"Name should be at least 4 symbols length.\");\n    if (!positionInput.value) warning.push(\"Position field should be filled.\");\n    if (positionInput.value.trim() === \"\" && positionInput.value) warning.push(\"Position field should not contain only spaces.\");\n    if (!salaryInput.value) warning.push(\"Salary field should be filled.\");\n    if (+salaryInput.value < 0) warning.push(\"Salary field should be with a positive number.\");\n    if (+salaryInput.value === 0) warning.push(\"Salary should be bigger than zero.\");\n    if (+ageInput.value < 18 || +ageInput.value > 90) warning.push(\"Age should be between 18 and 90 y.o.\");\n    if (warning.length > 0) return showNotification(warning.join(\"\\n\"), \"error\");\n    var newRow = document.createElement(\"tr\");\n    var newName = document.createElement(\"td\");\n    var newPosition = document.createElement(\"td\");\n    var newOffice = document.createElement(\"td\");\n    var newAge = document.createElement(\"td\");\n    var newSalary = document.createElement(\"td\");\n    newName.textContent = nameInput.value;\n    newPosition.textContent = positionInput.value;\n    newOffice.textContent = officeSelect.value;\n    newAge.textContent = ageInput.value;\n    newSalary.textContent = \"$\".concat((+salaryInput.value).toLocaleString(\"en-US\"));\n    newRow.append(newName, newPosition, newOffice, newAge, newSalary);\n    tableBody.append(newRow);\n    form.reset();\n    return showNotification(\"Employee successfully added.\", \"success\");\n};\nhandleAddInputs();\nform.appendChild(button);\ndocument.body.appendChild(form);\nbutton.addEventListener(\"click\", handleAddEmployee);\n\n//# sourceMappingURL=index.901d6e61.js.map\n","'use strict';\n\nconst navBar = document.querySelector('thead tr');\nconst tableBody = document.querySelector('tbody');\nconst form = document.createElement('form');\nconst dataAttributes = ['name', 'position', 'office', 'age', 'salary'];\nconst button = document.createElement('button');\nconst page = document.querySelector('body');\n\nbutton.type = 'submit';\nbutton.textContent = 'Save to table';\n\nfunction capitalizeFirstLetter(str) {\n  if (str.length === 0) {\n    return str;\n  }\n\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nform.classList.add('new-employee-form');\n\nlet sortWay = true;\n\nconst handleToNumbers = (str) => {\n  return +str.replace(/[^0-9.-]+/g, '');\n};\n\nfunction sortTable(value, columnIndex) {\n  const rowsArray = Array.from(tableBody.querySelectorAll('tr'));\n\n  rowsArray.sort((a, b) => {\n    const cellA = a.cells[columnIndex].innerText.toLowerCase();\n    const cellB = b.cells[columnIndex].innerText.toLowerCase();\n\n    if (sortWay) {\n      switch (value) {\n        case 'name':\n        case 'position':\n        case 'office':\n          return cellA.localeCompare(cellB);\n\n        case 'age':\n          return parseInt(cellA) - parseInt(cellB);\n\n        case 'salary':\n          return handleToNumbers(cellA) - handleToNumbers(cellB);\n\n        default:\n          return null;\n      }\n    } else {\n      switch (value) {\n        case 'name':\n        case 'position':\n        case 'office':\n          return cellB.localeCompare(cellA);\n\n        case 'age':\n          return parseInt(cellB) - parseInt(cellA);\n\n        case 'salary':\n          return handleToNumbers(cellB) - handleToNumbers(cellA);\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  rowsArray.forEach((row) => tableBody.appendChild(row));\n  sortWay = !sortWay;\n}\n\nnavBar.addEventListener('click', (action) => {\n  const activeFilter = action.target.closest('th');\n\n  if (activeFilter) {\n    const value = activeFilter.textContent.toLowerCase().trim();\n    const columnIndex = action.target.cellIndex;\n\n    sortTable(value, columnIndex);\n  }\n});\n\ntableBody.addEventListener('click', (action) => {\n  const clickedRow = action.target.closest('tr');\n\n  if (clickedRow) {\n    tableBody.querySelectorAll('tr').forEach((row) => {\n      row.classList.remove('active');\n    });\n\n    clickedRow.classList.add('active');\n  }\n});\n\nconst handleAddInputs = () => {\n  dataAttributes.forEach((attribute) => {\n    const label = document.createElement('label');\n    const input = document.createElement('input');\n\n    switch (attribute) {\n      case 'name':\n      case 'position':\n        input.type = 'text';\n        input.name = attribute;\n        input.dataset.qa = attribute;\n\n        label.htmlFor = input.id;\n        label.textContent = capitalizeFirstLetter(attribute);\n\n        form.appendChild(label);\n        label.appendChild(input);\n        break;\n\n      case 'office':\n        const select = document.createElement('select');\n        const cities = [\n          'Tokyo',\n          'Singapore',\n          'London',\n          'New York',\n          'Edinburgh',\n          'San Francisco',\n        ];\n\n        select.name = attribute;\n        select.required = true;\n        select.dataset.qa = attribute;\n\n        cities.forEach((city) => {\n          const option = document.createElement('option');\n\n          option.value = city;\n          option.textContent = city;\n          select.appendChild(option);\n        });\n\n        label.textContent = capitalizeFirstLetter(attribute);\n\n        form.appendChild(label);\n        label.appendChild(select);\n        break;\n\n      case 'age':\n        input.type = 'number';\n        input.name = attribute;\n        input.dataset.qa = attribute;\n\n        label.htmlFor = input.id;\n        label.textContent = capitalizeFirstLetter(attribute);\n\n        form.appendChild(label);\n        label.appendChild(input);\n        break;\n\n      case 'salary':\n        input.type = 'number';\n        input.name = attribute;\n        input.dataset.qa = attribute;\n\n        label.htmlFor = input.id;\n        label.textContent = capitalizeFirstLetter(attribute);\n\n        form.appendChild(label);\n        label.appendChild(input);\n        break;\n    }\n  });\n};\n\nfunction showNotification(text, type) {\n  const notification = document.createElement('div');\n  const notificationMessage = document.createElement('span');\n\n  notificationMessage.setAttribute('class', 'title');\n  notification.setAttribute('class', 'notification');\n  notification.setAttribute('data-qa', 'notification');\n  notification.style.display = 'flex';\n  notification.style.justifyContent = 'center';\n  notification.style.alignItems = 'center';\n  notification.style.textAlign = 'center';\n  notificationMessage.textContent = text;\n\n  if (type === 'error') {\n    notification.classList.add('error');\n  } else {\n    notification.classList.add('success');\n  }\n\n  notification.append(notificationMessage);\n  page.append(notification);\n\n  setTimeout(() => notification.remove(), 5000);\n}\n\nconst handleAddEmployee = (action) => {\n  action.preventDefault();\n\n  const nameInput = form.querySelector('input[name=\"name\"]');\n  const positionInput = form.querySelector('input[name=\"position\"]');\n  const officeSelect = form.querySelector('select[name=\"office\"]');\n  const ageInput = form.querySelector('input[name=\"age\"]');\n  const salaryInput = form.querySelector('input[name=\"salary\"]');\n\n  const warning = [];\n\n  if (nameInput.value.trim().length < 4) {\n    warning.push('Name should be at least 4 symbols length.');\n  }\n\n  if (!positionInput.value) {\n    warning.push('Position field should be filled.');\n  }\n\n  if (positionInput.value.trim() === '' && positionInput.value) {\n    warning.push('Position field should not contain only spaces.');\n  }\n\n  if (!salaryInput.value) {\n    warning.push('Salary field should be filled.');\n  }\n\n  if (+salaryInput.value < 0) {\n    warning.push('Salary field should be with a positive number.');\n  }\n\n  if (+salaryInput.value === 0) {\n    warning.push('Salary should be bigger than zero.');\n  }\n\n  if (+ageInput.value < 18 || +ageInput.value > 90) {\n    warning.push('Age should be between 18 and 90 y.o.');\n  }\n\n  if (warning.length > 0) {\n    return showNotification(warning.join('\\n'), 'error');\n  }\n\n  const newRow = document.createElement('tr');\n  const newName = document.createElement('td');\n  const newPosition = document.createElement('td');\n  const newOffice = document.createElement('td');\n  const newAge = document.createElement('td');\n  const newSalary = document.createElement('td');\n\n  newName.textContent = nameInput.value;\n  newPosition.textContent = positionInput.value;\n  newOffice.textContent = officeSelect.value;\n  newAge.textContent = ageInput.value;\n  newSalary.textContent = `$${(+salaryInput.value).toLocaleString('en-US')}`;\n\n  newRow.append(newName, newPosition, newOffice, newAge, newSalary);\n  tableBody.append(newRow);\n\n  form.reset();\n\n  return showNotification('Employee successfully added.', 'success');\n};\n\nhandleAddInputs();\nform.appendChild(button);\ndocument.body.appendChild(form);\n\nbutton.addEventListener('click', handleAddEmployee);\n"],"names":["navBar","document","querySelector","tableBody","form","createElement","button","page","capitalizeFirstLetter","str","length","charAt","toUpperCase","slice","type","textContent","classList","add","sortWay","handleToNumbers","replace","showNotification","text","notification","notificationMessage","setAttribute","style","display","justifyContent","alignItems","textAlign","append","setTimeout","remove","addEventListener","action","activeFilter","target","closest","rowsArray","value","toLowerCase","trim","columnIndex","cellIndex","Array","from","querySelectorAll","sort","a","b","cellA","cells","innerText","cellB","localeCompare","parseInt","forEach","row","appendChild","clickedRow","dataAttributes","attribute","label","input","name","dataset","qa","htmlFor","id","select","required","cities","city","option","body","preventDefault","nameInput","positionInput","officeSelect","ageInput","salaryInput","warning","push","join","newRow","newName","newPosition","newOffice","newAge","newSalary","concat","toLocaleString","reset"],"version":3,"file":"index.901d6e61.js.map"}